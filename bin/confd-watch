#!/bin/bash

set -eo pipefail

export ETCD_PORT=${ETCD_PORT:-2379}
export HOST_IP=${HOST_IP:-172.17.42.1}
export ETCD=$HOST_IP:$ETCD_PORT

export START=yes
export VARNISH_VCL_CONF=/etc/varnish/default.vcl
export VARNISH_LISTEN_ADDRESS=0.0.0.0
export VARNISH_LISTEN_PORT=${VARNISH_PORT:-80}
export VARNISH_MEM=${VARNISH_MEM:-512M} # storage size
export VARNISH_STORAGE="malloc,${VARNISH_MEM}" # -s file,/var/lib/varnish/storage.tmp,10G \

# Maximum number of open files (for ulimit -n)
export NFILES=131072

# Maximum locked memory size (for ulimit -l)
# Used for locking the shared memory log in memory.  If you increase log size,
# you need to increase this number as well
export MEMLOCK=82000

# File containing administration secret
export VARNISH_SECRET_FILE=/etc/varnish/secret

# -T ${VARNISH_ADMIN_LISTEN_ADDRESS}:${VARNISH_ADMIN_LISTEN_PORT} \
# -t ${VARNISH_TTL} \
# -w ${VARNISH_MIN_THREADS},${VARNISH_MAX_THREADS},${VARNISH_THREAD_TIMEOUT} \

export DAEMON_OPTS="-a ${VARNISH_LISTEN_ADDRESS}:${VARNISH_LISTEN_PORT} \
             -f ${VARNISH_VCL_CONF} \
             -S ${VARNISH_SECRET_FILE} \
             -s ${VARNISH_STORAGE}"

echo "[varnish] booting container. ETCD: $ETCD"

# Try to make initial configuration every 5 seconds until successful
until confd -onetime -node $ETCD -config-file /etc/confd/conf.d/default.toml; do
    echo "[varnish] waiting for confd to create initial varnish configuration"
    sleep 5
done

# Put a continual polling `confd` process into the background to watch
# for changes every 10 seconds
confd -interval 10 -node $ETCD -config-file /etc/confd/conf.d/default.toml &
echo "[varnish] confd is now monitoring etcd for changes..."

# Start the varnish service using the generated config
echo "[varnish] starting varnish service..."

# do not start this, confd starts it via reload_cmd
# /etc/init.d/varnish start

sleep 30

# Follow the logs to allow the script to continue running
varnishlog
